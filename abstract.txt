Algorithmic inversion principles for Extensional Type Theory

In type theory an inversion principle says that a derivable judgement has a
derivation of a specific shape depending on the judgement only (other
derivations may exist). There are many uses of inversion principles. For
example, in a proof assistant we usually need an algorithmic version of
inversion principles that allows us to deconstruct derived judgements.

Unfortunately, in extensional type theory only weak forms of inversion
principles hold, and they are normally presented in a declarative way, not
algorithmically. Judgements simply do not carry enough information for stronger
inversion principles to hold. We present an enrichment of extensional type
theory in which judgements carry additional information about the derivation.
The enriched type theory has algorithmic inversion principles, and is sound and
complete with respect to standard extensional type theory in a precise sense.
We may thus safely implement inversion in a proof assistant for extensional
type theory.

This is work in progress, done jointly with Andrej Bauer.
